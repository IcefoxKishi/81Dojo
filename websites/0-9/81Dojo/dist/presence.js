var __webpack_exports__ = {};
const presence = new Presence({
    clientId: "1338891034310213683"
});
presence.on("UpdateData", async () => {
    const presenceData = {
        largeImageKey: "https://81dojo.com/dojo/images/avatars/study_black.jpg"
    };
    switch (document.location.hostname) {
        case "81dojo.com":
            if (document.location.pathname == "/")
                presenceData.details = "Viewing home page";
            else if (document.location.pathname.includes("/client/")) {
                if (parseFloat(document.getElementById("layerLogin").style.opacity) > 0)
                    presenceData.details = "Logging in to client";
                else {
                    let server = document.getElementById("header-serverName").innerText.slice(0, -3);
                    let username = document.getElementById("header-playerName").innerText.slice(0, -3);
                    if (document.getElementById("layerLobby").style.display == "block")
                        presenceData.details = "In " + server + " lobby";
                    else {
                        let playerElements = document.querySelectorAll("[id='player-info-name']");
                        let playerElementIndex = 0;
                        const players = [];
                        const ratings = [];
                        for (let i = 0; i < playerElements.length; i++) {
                            players.push(playerElements[i].innerHTML);
                            ratings.push(playerElements[i].parentElement.children.item(4).innerHTML.slice(3, 7));
                        }
                        if (username in players) {
                            for (let i = 0; i < playerElements.length; i++) {
                                if (playerElements[i].innerHTML == username)
                                    playerElementIndex = i;
                            }
                            const opponentName = players[1 - players.indexOf(username)];
                            const opponentRate = playerElements[1 - playerElementIndex].parentNode.children.item(4).innerHTML.slice(3, 7);
                            if (playerElements[0].classList.contains("name-winner"))
                                presenceData.details = "In post-game analysis";
                            else {
                                presenceData.details = "In a game";
                            }
                            presenceData.state = "vs. " + opponentName + "(" + opponentRate + ")";
                        }
                        else {
                            presenceData.details = "Spectating";
                            presenceData.state = players[0] + " (" + ratings[0] + ") vs. " + players[1] + " (" + ratings[1] + ")";
                        }
                    }
                }
            }
            break;
        case "system.81dojo.com":
            presenceData.details = "Viewing WebSystem";
    }
    presence.setActivity(presenceData);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9wcmVzZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQztJQUM1QixRQUFRLEVBQUUscUJBQXFCO0NBQy9CLENBQUMsQ0FBQTtBQUtILFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ3BDLE1BQU0sWUFBWSxHQUFpQjtRQUNsQyxhQUFhLEVBQUUsd0RBQXdEO0tBQ3ZFLENBQUM7SUFDRixRQUFRLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFDO1FBQ2xDLEtBQUssWUFBWTtZQUNoQixJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxJQUFJLEdBQUc7Z0JBQ3BDLFlBQVksQ0FBQyxPQUFPLEdBQUcsbUJBQW1CLENBQUM7aUJBQ3ZDLElBQUksUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFDO2dCQUN4RCxJQUFJLFVBQVUsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO29CQUN0RSxZQUFZLENBQUMsT0FBTyxHQUFHLHNCQUFzQixDQUFDO3FCQUMzQztvQkFDSCxJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtvQkFDL0UsSUFBSSxRQUFRLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7b0JBQ2pGLElBQUksUUFBUSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FB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

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
